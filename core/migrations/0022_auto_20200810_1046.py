# Generated by Django 2.2.13 on 2020-08-10 10:46
import os
import csv
import re

from django.db import migrations
from django.conf import settings

def add_alias_from_csv(path, SourceColumnMap):
    meta_columns_path = os.path.join(path, "meta_columns.csv")

    with open(meta_columns_path) as meta_file:
        reader = csv.DictReader(meta_file)

        for row in reader:
            columns = SourceColumnMap.objects.filter(name=row['col_name'], source__active_mirror_name=row['active_mirror_name'])
            if len(columns):
                column = columns[0]
                column.alias = row['col_alias']
                column.save()

def capitaliseFirstListItem(my_list):
    my_list[0] = my_list[0].capitalize()

    return my_list

def splitCamelCase(name):
    return ' '.join(capitaliseFirstListItem(re.sub('([A-Z][a-z]+)', r' \1', re.sub('([A-Z]+)', r' \1', name)).split()))

def generateAlias(name):
    if '_' in name:
        return ' '.join(capitaliseFirstListItem(name.split('_')))
    return splitCamelCase(name)

def generate_missing_alias_from_column_name(SourceColumnMap):
    columns = SourceColumnMap.objects.filter(alias__isnull=True)
    for column in columns:
        column.alias = generateAlias(column.name)
        column.save()

def handle_aliases(apps, schema_editor):
    """
    Updates SourceColumnMap objects with aliases from the meta_columns.csv
    """
    SourceColumnMap = apps.get_model('core', 'SourceColumnMap')
    add_alias_from_csv(settings.CSV_FILES_FOLDER, SourceColumnMap)
    generate_missing_alias_from_column_name(SourceColumnMap)


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0021_auto_20200805_1338'),
    ]

    operations = [
        migrations.RunPython(handle_aliases),
    ]
