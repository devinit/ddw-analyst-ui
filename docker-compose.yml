version: '3.3'

services:
  db:
    build:
      context: .
      dockerfile: Dockerfile_pg
    volumes:
      - metadata2:/var/lib/postgresql/data
    networks:
      - ddw_net
  web:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - '.:/src'
    expose:
      - '80'
    depends_on:
      - db
    environment:
      - S3_KEY
      - S3_SECRET
      - FTSUSER
      - FTSPASS
      - DJANGO_DEV
      - DJANGO_SECRET_KEY
      - EMAIL_HOST_PASSWORD
      - GITHUB_TOKEN
      - CELERY_BROKER_URL=amqp://admin:ddw_analyst_ui@rabbitmq:5672/myvhost
      - SLACK_BOT_TOKEN
      - SLACK_CHANNEL_ID
      - BASE_URL
      - API_BASE_URL
    networks:
      - ddw_net
  spotlights:
    build:
      context: .
      dockerfile: Dockerfile_spotlights_api
    expose:
      - '8000'
    depends_on:
      - db
    networks:
      - ddw_net
  nginx:
    image: nginx:latest
    ports:
      - '80:80'
      - '443:443'
    environment:
      - VIRTUAL_HOST=ddw.devinit.org
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
      - ./static:/static
      - ./ssl:/etc/ssl/
    restart: always
    command: '/bin/sh -c ''while :; do sleep 12h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    depends_on:
      - web
    networks:
      - ddw_net

  rabbitmq:
    image: rabbitmq:latest
    ports:
      - 4369:4369
      - 5671:5671
      - 5672:5672
      - 15672:15672
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=ddw_analyst_ui
      - RABBITMQ_DEFAULT_VHOST=myvhost
    networks:
      - ddw_net

  celery:
    image: ddw-analyst-ui_web:latest
    command: celery -A ddw_analyst_ui worker -l info
    depends_on:
      - web
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://admin:ddw_analyst_ui@rabbitmq:5672/myvhost
    networks:
      - ddw_net

  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    depends_on:
      - nginx
    env_file: .env
    environment:
      - SITE_URL
      - SPOTLIGHTS_URL
    entrypoint: /bin/sh -c "certbot certonly --webroot --webroot-path=/var/www/certbot/letsencrypt --email di-devs@devinit.org --agree-tos --no-eff-email -d $SITE_URL && certbot certonly --webroot --webroot-path=/var/www/certbot/spotlights --email di-devs@devinit.org --agree-tos --no-eff-email -d $SPOTLIGHTS_URL && trap exit TERM; while :; do certbot renew --deploy-hook /etc/letsencrypt/certbot_success.sh; sleep 12h & wait $${!}; done;"
    volumes:
      - ./static:/var/www/certbot/
      - ./ssl:/etc/letsencrypt/
      - ./certbot_logs:/var/log/letsencrypt

volumes:
  metadata2:
    external: true
networks:
  ddw_net:
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/16
